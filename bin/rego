#!/home/sho/bin/ruby19
# -*- coding: utf-8; -*-
#
# rego.rb: A web contents management system to generate static pages by building blocks.
#
# Copyright (C) 2010 by TADA Tadashi <t@tdtds.jp>
# Distributed under GPL.
#

require 'pathname'
begin
	bin = Pathname::new __FILE__
	loop { bin = bin.readlink }
rescue Errno::EINVAL
	$:.unshift( bin.dirname + '../lib' )
end

opts = {}
while opt = ARGV.shift
	case opt
	when '-f', '--force'   # force options
		opts[:force] = true
	when '-V', '--verbose' # verbose options
		opts[:verbose] = true
	when '-L', '--lib'     # append lib path
		new_lib = ARGV.shift
		raise ArgumentError::new( 'need parameter for -L option.' ) unless new_lib
		$:.unshift( new_lib )
	when /^-/
		raise ArgumentError::new( "invalid option: #{opt}." )
	else
		ARGV.unshift opt
		break
	end
end

src = ARGV.shift
dest = ARGV.shift

unless src and dest then
	$stderr.puts <<-USAGE.gsub( /^\t\t/, '' )
		#{File::basename $0}: A WCM system to generate static pages by building blocks.
		usage: #{File::basename $0} [-fVL] <src_dir> <dest_dir>

		--force, -f:      force generating contents.
		--verbose, -V:    show verbose messages.
		--lib, -L <path>: append block library path of your web site.
		src_dir:          source directory of contents.
		dest_dir:         destination dirctory to generate contents.
	USAGE
	exit 1
end

require 'rego'
REGO::App::new( src, dest, opts ).run
